rename(any_of(c(hashed_arc_number = arc_number_field_name)))
# hash arc num if required
if (hide_arc_number) {
data = data %>% hash_arc_number(as.symbol(arc_number_field_name))
}
# load individual responses if required
if (keep_individual_instruments) {
load_individual_redcap_instruments(API_key,
arc_number_field_name,
complete_redcap_data = data,
redcap_server = redcap_server_choice)
}
data
}
load_redcap_instruments(Sys.getenv('nicmdd_key'), 'arcnumber') %>% distinct(id, arcnumber)
show_id_mapping()
vignette('namespace')
devtools::document()
devtools::document()
install.packages(c("cachem", "car", "chron", "classInt", "collections", "colorspace", "commonmark", "curl", "digest", "e1071", "fastmap", "fs", "ggmap", "ggpattern", "gh", "GPArotation", "gridpattern", "haven", "htmltools", "htmlwidgets", "jsonlite", "languageserver", "lavaan", "lme4", "lubridate", "markdown", "minqa", "MuMIn", "osmdata", "pkgload", "plyr", "png", "processx", "ps", "psych", "purrr", "Rcpp", "RcppEigen", "readxl", "redcapAPI", "renv", "rmcorr", "s2", "sf", "stringi", "styler", "testthat", "tidyr", "units", "xfun"))
install.packages(c("boot", "class", "codetools", "foreign", "MASS", "Matrix", "mgcv", "nlme", "spatial", "survival"), lib="C:/Users/shermangt/AppData/Local/Programs/R/R-4.2.2/library")
install.packages(c("cachem", "car", "chron", "classInt", "collections", "colorspace", "commonmark", "curl", "digest", "e1071", "fastmap", "fs", "ggmap", "ggpattern", "gh", "GPArotation", "gridpattern", "haven", "htmltools", "htmlwidgets", "jsonlite", "languageserver", "lavaan", "lme4", "lubridate", "markdown", "minqa", "MuMIn", "osmdata", "pkgload", "plyr", "png", "processx", "ps", "psych", "purrr", "Rcpp", "RcppEigen", "readxl", "redcapAPI", "renv", "rmcorr", "s2", "sf", "stringi", "styler", "testthat", "tidyr", "units", "xfun"))
install.packages(c("boot", "class", "codetools", "foreign", "MASS", "Matrix", "mgcv", "nlme", "spatial", "survival"), lib="C:/Users/shermangt/AppData/Local/Programs/R/R-4.2.2/library")
devtools::document()
devtools::install_github('gtsherman/NIDA-IRP-REDCap-CDW-Pipeline')
usethis::use_vignette('pipeline')
load_cdw_data('922*', '//nida-filestore/NRB-CPN-CDWData')
load_cdw_data('922*', '//nida-filestore/NRB-CPN-CDWData')
usethis::edit_r_environ()
?load_redcap_instruments
help(load_redcap_instruments)
help(load_individual_redcap_instruments)
?clear_individual_redcap_instruments
?load_cdw_data
load_cdw_data(c('922Control*', '922MDD*'), '//nida-filestore/NRB-CPN-CDWData') %>% nrow()
load_cdw_data(c('922Control*', '922Remitted*'), '//nida-filestore/NRB-CPN-CDWData') %>% nrow()
load_cdw_data('922Remitted*', '//nida-filestore/NRB-CPN-CDWData') %>% nrow()
redcap_data = load_redcap_instruments(Sys.getenv('nicmdd_key'), 'arcnumber')
cdw_data = load_cdw_data('922*', '//nida-filestore/NRB-CPN-CDWData')
cdw_data
redcap_data
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data)
all_data
all_data %>% distinct(id)
all_data %>% distinct(id) %>% print(n = nrow(.))
redcap_cdw_id_mapping()
cdw_data
names(redcap_cdw_id_mapping())
names(redcap_cdw_id_mapping())[2]
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
arc_number_field_name = names(id_map)[2]
cdw_data %>%
rename(any_of(c(arc_number_field_name = id_name)))
cdw_data %>%
rename(any_of(c({{ arc_number_field_name }} = id_name)))
cdw_data %>%
rename(any_of(c(.data[[arc_number_field_name]] = id_name)))
cdw_data %>%
rename(any_of(c(!!arc_number_field_name = id_name)))
cdw_data %>%
rename(any_of(c(!!arc_number_field_name := id_name)))
cdw_data %>%
rename(any_of(c(!!arc_number_field_name = id_name)))
id_map
id_map[2] = 'arc_num_inter'
id_map
names(id_map)[2] = 'arc_num_inter'
id_map
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num') %>%
mutate(id = ifelse(is.na(id), arc_num_inter, id_name)) %>%
select(-arc_num_inter)
id_map = redcap_cdw_id_mapping() %>% select(-raw_arc_number)
id_name = names(id_map)[1]
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num') %>%
mutate(id = ifelse(is.na(id), arc_num_inter, id_name)) %>%
select(-arc_num_inter)
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(id), arc_num_inter, id_name)) %>%
select(-arc_num_inter)
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(id_name), arc_num_inter, id_name)) %>%
select(-arc_num_inter)
id_map
id_name
cdw_data %>%
rename(arc_num_inter = id_name)# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter')# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = replace_na(id_name, arc_num_inter))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = replace_na({{ id_name }}, arc_num_inter))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = replace_na(id, arc_num_inter))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
filter(is.na(id))
id_map
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(id_name), arc_num_inter, id_name))
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(id_name), arc_num_inter, {{ id_name }}))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na({{ id_name }}), arc_num_inter, {{ id_name }}))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na({{ id_name }}), arc_num_inter, id))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na({{ id_name }}), arc_num_inter, id)) %>%
filter(arc_num_inter == id)
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na({{ id_name }}), arc_num_inter, id)) %>%
filter(is.na(id))
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]], arc_num_inter, .data[[id_name]]))# %>%
select(-arc_num_inter)
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]]))# %>%
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
filter(arc_num_inter == id)
#' Combine the REDCap and CDW data into a single long format data frame.
#' @export
#' @param redcap_data The full REDCap data frame from `load_redcap_instruments()`.
#' @param cdw_data The full CDW data frame from `load_cdw_data()`.
#' @return The fully merged REDCap and CDW data in long format.
combine_redcap_and_cdw_data = function(redcap_data, cdw_data) {
if (!exists('.redcap_metadata', envir = globalenv())) {
stop('Missing REDCap metadata. Please reload REDCap data. Do not remove hidden items in your global environment.')
}
redcap_metadata = .GlobalEnv$.redcap_metadata
id_name = redcap_metadata %>%
filter(row_number() == 1) %>%
.$field_name
# get REDCap data in long form
redcap_instruments_long = tibble()
forms = redcap_metadata %>% distinct(form_name)
for (form in forms$form_name) {
instrument = redcap_data %>%
select(id, starts_with('redcap'), matches(paste0(form, '_timestamp')),
any_of(redcap_metadata %>%
filter(form_name == form,
field_name != id_name) %>%
.$field_name))
redcap_instruments_long = instrument %>%
mutate(instrument_name = form,
across(-c(ends_with('timestamp')), ~as.character(.))) %>%
pivot_longer(-c({{ id_name }}, starts_with('redcap_'), instrument_name, matches(paste0(form, '_timestamp')))) %>%
rename(any_of(c(date = paste0(form, '_timestamp')))) %>%
bind_rows(redcap_instruments_long)
}
id_map = redcap_cdw_id_mapping() %>% select(-raw_arc_number)
id_name = names(id_map)[1]
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
select(-arc_num_inter)
mutate(redcap_event_name = 'CDW') %>%
rename(instrument_name = test,
value = response) %>%
bind_rows(redcap_instruments_long %>%
rename(question = name)) %>%
select(id, redcap_event_name, date, instrument_name, question, value)
}
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data)
#' Combine the REDCap and CDW data into a single long format data frame.
#' @export
#' @param redcap_data The full REDCap data frame from `load_redcap_instruments()`.
#' @param cdw_data The full CDW data frame from `load_cdw_data()`.
#' @return The fully merged REDCap and CDW data in long format.
combine_redcap_and_cdw_data = function(redcap_data, cdw_data) {
if (!exists('.redcap_metadata', envir = globalenv())) {
stop('Missing REDCap metadata. Please reload REDCap data. Do not remove hidden items in your global environment.')
}
redcap_metadata = .GlobalEnv$.redcap_metadata
id_name = redcap_metadata %>%
filter(row_number() == 1) %>%
.$field_name
# get REDCap data in long form
redcap_instruments_long = tibble()
forms = redcap_metadata %>% distinct(form_name)
for (form in forms$form_name) {
instrument = redcap_data %>%
select(id, starts_with('redcap'), matches(paste0(form, '_timestamp')),
any_of(redcap_metadata %>%
filter(form_name == form,
field_name != id_name) %>%
.$field_name))
redcap_instruments_long = instrument %>%
mutate(instrument_name = form,
across(-c(ends_with('timestamp')), ~as.character(.))) %>%
pivot_longer(-c({{ id_name }}, starts_with('redcap_'), instrument_name, matches(paste0(form, '_timestamp')))) %>%
rename(any_of(c(date = paste0(form, '_timestamp')))) %>%
bind_rows(redcap_instruments_long)
}
id_map = redcap_cdw_id_mapping() %>% select(-raw_arc_number)
id_name = names(id_map)[1]
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
select(-arc_num_inter) %>%
mutate(redcap_event_name = 'CDW') %>%
rename(instrument_name = test,
value = response) %>%
bind_rows(redcap_instruments_long %>%
rename(question = name)) %>%
select(id, redcap_event_name, date, instrument_name, question, value)
}
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data)
all_data
all_data %>% distinct(id) %>% print(n = nrow(.))
redcap_cdw_id_mapping()
redcap_data = load_redcap_instruments(Sys.getenv('nicmdd_key'), 'arcnumber')
redcap_data
redcap_data = load_redcap_instruments(Sys.getenv('nicmdd_key'), 'arcnumber', hide_arc_number = F)
redcap_data
redcap_data %>% distinct(id, arcnumber)
.redcap_cdw_id_mapping
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
arc_numbers_hidden = T
if (arc_numbers_hidden) {
id_map = id_map %>% select(-raw_arc_number)
} else {
id_map = id_map %>% select({{ id_name }}, raw_arc_number)
}
id_map
arc_numbers_hidden = F
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
if (arc_numbers_hidden) {
id_map = id_map %>% select(-raw_arc_number)
} else {
id_map = id_map %>% select({{ id_name }}, raw_arc_number)
}
id_map
#' Combine the REDCap and CDW data into a single long format data frame.
#' @export
#' @param redcap_data The full REDCap data frame from `load_redcap_instruments()`.
#' @param cdw_data The full CDW data frame from `load_cdw_data()`.
#' @return The fully merged REDCap and CDW data in long format.
combine_redcap_and_cdw_data = function(redcap_data, cdw_data,
arc_numbers_hidden = T) {
if (!exists('.redcap_metadata', envir = globalenv())) {
stop('Missing REDCap metadata. Please reload REDCap data. Do not remove hidden items in your global environment.')
}
redcap_metadata = .GlobalEnv$.redcap_metadata
id_name = redcap_metadata %>%
filter(row_number() == 1) %>%
.$field_name
# get REDCap data in long form
redcap_instruments_long = tibble()
forms = redcap_metadata %>% distinct(form_name)
for (form in forms$form_name) {
instrument = redcap_data %>%
select(id, starts_with('redcap'), matches(paste0(form, '_timestamp')),
any_of(redcap_metadata %>%
filter(form_name == form,
field_name != id_name) %>%
.$field_name))
redcap_instruments_long = instrument %>%
mutate(instrument_name = form,
across(-c(ends_with('timestamp')), ~as.character(.))) %>%
pivot_longer(-c({{ id_name }}, starts_with('redcap_'), instrument_name, matches(paste0(form, '_timestamp')))) %>%
rename(any_of(c(date = paste0(form, '_timestamp')))) %>%
bind_rows(redcap_instruments_long)
}
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
if (arc_numbers_hidden) {
id_map = id_map %>% select(-raw_arc_number)
} else {
id_map = id_map %>% select({{ id_name }}, raw_arc_number)
}
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
select(-arc_num_inter) %>%
mutate(redcap_event_name = 'CDW') %>%
rename(instrument_name = test,
value = response) %>%
bind_rows(redcap_instruments_long %>%
rename(question = name)) %>%
select(id, redcap_event_name, date, instrument_name, question, value)
}
cdw_data = load_cdw_data('922*', '//nida-filestore/NRB-CPN-CDWData', hide_arc_number = F)
cdw_data
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data, arc_numbers_hidden = F)
#' Combine the REDCap and CDW data into a single long format data frame.
#' @export
#' @param redcap_data The full REDCap data frame from `load_redcap_instruments()`.
#' @param cdw_data The full CDW data frame from `load_cdw_data()`.
#' @return The fully merged REDCap and CDW data in long format.
combine_redcap_and_cdw_data = function(redcap_data, cdw_data,
arc_numbers_hidden = T) {
if (!exists('.redcap_metadata', envir = globalenv())) {
stop('Missing REDCap metadata. Please reload REDCap data. Do not remove hidden items in your global environment.')
}
redcap_metadata = .GlobalEnv$.redcap_metadata
id_name = redcap_metadata %>%
filter(row_number() == 1) %>%
.$field_name
# get REDCap data in long form
redcap_instruments_long = tibble()
forms = redcap_metadata %>% distinct(form_name)
for (form in forms$form_name) {
instrument = redcap_data %>%
select(id, starts_with('redcap'), matches(paste0(form, '_timestamp')),
any_of(redcap_metadata %>%
filter(form_name == form,
field_name != id_name) %>%
.$field_name))
redcap_instruments_long = instrument %>%
mutate(instrument_name = form,
across(-c(ends_with('timestamp')), ~as.character(.))) %>%
pivot_longer(-c({{ id_name }}, starts_with('redcap_'), instrument_name, matches(paste0(form, '_timestamp')))) %>%
rename(any_of(c(date = paste0(form, '_timestamp')))) %>%
bind_rows(redcap_instruments_long)
}
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
if (arc_numbers_hidden) {
id_map = id_map %>% select(-raw_arc_number)
} else {
id_map = id_map %>%
select({{ id_name }}, raw_arc_number) %>%
mutate(raw_arc_number = as.character(raw_arc_number))
}
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
select(-arc_num_inter) %>%
mutate(redcap_event_name = 'CDW') %>%
rename(instrument_name = test,
value = response) %>%
bind_rows(redcap_instruments_long %>%
rename(question = name)) %>%
select(id, redcap_event_name, date, instrument_name, question, value)
}
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data, arc_numbers_hidden = F)
#' Combine the REDCap and CDW data into a single long format data frame.
#' @export
#' @param redcap_data The full REDCap data frame from `load_redcap_instruments()`.
#' @param cdw_data The full CDW data frame from `load_cdw_data()`.
#' @return The fully merged REDCap and CDW data in long format.
combine_redcap_and_cdw_data = function(redcap_data, cdw_data,
arc_numbers_hidden = T) {
if (!exists('.redcap_metadata', envir = globalenv())) {
stop('Missing REDCap metadata. Please reload REDCap data. Do not remove hidden items in your global environment.')
}
redcap_metadata = .GlobalEnv$.redcap_metadata
id_name = redcap_metadata %>%
filter(row_number() == 1) %>%
.$field_name
# get REDCap data in long form
redcap_instruments_long = tibble()
forms = redcap_metadata %>% distinct(form_name)
for (form in forms$form_name) {
instrument = redcap_data %>%
select(id, starts_with('redcap'), matches(paste0(form, '_timestamp')),
any_of(redcap_metadata %>%
filter(form_name == form,
field_name != id_name) %>%
.$field_name))
redcap_instruments_long = instrument %>%
mutate(instrument_name = form,
across(-c(ends_with('timestamp')), ~as.character(.))) %>%
pivot_longer(-c({{ id_name }}, starts_with('redcap_'), instrument_name, matches(paste0(form, '_timestamp')))) %>%
rename(any_of(c(date = paste0(form, '_timestamp')))) %>%
bind_rows(redcap_instruments_long)
}
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
if (arc_numbers_hidden) {
id_map = id_map %>% select(-raw_arc_number)
} else {
id_map = id_map %>%
select({{ id_name }}, raw_arc_number) %>%
mutate(raw_arc_number = as.numeric(raw_arc_number))
}
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
select(-arc_num_inter) %>%
mutate(redcap_event_name = 'CDW') %>%
rename(instrument_name = test,
value = response) %>%
bind_rows(redcap_instruments_long %>%
rename(question = name)) %>%
select(id, redcap_event_name, date, instrument_name, question, value)
}
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data, arc_numbers_hidden = F)
#' Combine the REDCap and CDW data into a single long format data frame.
#' @export
#' @param redcap_data The full REDCap data frame from `load_redcap_instruments()`.
#' @param cdw_data The full CDW data frame from `load_cdw_data()`.
#' @return The fully merged REDCap and CDW data in long format.
combine_redcap_and_cdw_data = function(redcap_data, cdw_data,
arc_numbers_hidden = T) {
if (!exists('.redcap_metadata', envir = globalenv())) {
stop('Missing REDCap metadata. Please reload REDCap data. Do not remove hidden items in your global environment.')
}
redcap_metadata = .GlobalEnv$.redcap_metadata
id_name = redcap_metadata %>%
filter(row_number() == 1) %>%
.$field_name
# get REDCap data in long form
redcap_instruments_long = tibble()
forms = redcap_metadata %>% distinct(form_name)
for (form in forms$form_name) {
instrument = redcap_data %>%
select(id, starts_with('redcap'), matches(paste0(form, '_timestamp')),
any_of(redcap_metadata %>%
filter(form_name == form,
field_name != id_name) %>%
.$field_name))
redcap_instruments_long = instrument %>%
mutate(instrument_name = form,
across(-c(ends_with('timestamp')), ~as.character(.))) %>%
pivot_longer(-c({{ id_name }}, starts_with('redcap_'), instrument_name, matches(paste0(form, '_timestamp')))) %>%
rename(any_of(c(date = paste0(form, '_timestamp')))) %>%
bind_rows(redcap_instruments_long)
}
id_map = redcap_cdw_id_mapping()
id_name = names(id_map)[1]
if (arc_numbers_hidden) {
id_map = id_map %>% select(-raw_arc_number)
} else {
id_map = id_map %>%
select({{ id_name }}, raw_arc_number) %>%
mutate(raw_arc_number = as.character(raw_arc_number))
}
names(id_map)[2] = 'arc_num_inter'
cdw_data %>%
rename(arc_num_inter = id_name) %>%
mutate(arc_num_inter = as.character(arc_num_inter)) %>%
left_join(id_map, by = 'arc_num_inter') %>%
mutate(id = ifelse(is.na(.data[[id_name]]), arc_num_inter, .data[[id_name]])) %>%
select(-arc_num_inter) %>%
mutate(redcap_event_name = 'CDW') %>%
rename(instrument_name = test,
value = response) %>%
bind_rows(redcap_instruments_long %>%
rename(question = name)) %>%
select(id, redcap_event_name, date, instrument_name, question, value)
}
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data, arc_numbers_hidden = F)
all_data
all_data %>% distinct(id)
cdw_data = load_cdw_data('922*', '//nida-filestore/NRB-CPN-CDWData', hide_arc_number = T)
redcap_data = load_redcap_instruments(Sys.getenv('nicmdd_key'), 'arcnumber', hide_arc_number = T)
all_data = combine_redcap_and_cdw_data(redcap_data, cdw_data, arc_numbers_hidden = T)
all_data
all_data %>% distinct(id)
redcap_cdw_id_mapping()
library(tidyverse)
installr::updateR()
installr::updateR()
R.home
R.home()
devtools::install_github('gtsherman/NIDA-IRP-REDCap-CDW-Pipeline', build_vignettes = T)
vignette('pipeline')
help(redcapCDW)
??redcapCDW
help(package=redcapCDW)
vignette('pipeline')
library(redcapCDW)
